<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--
        MyBatis配置顺序
        properties, settings, typeAliases, typeHandlers, objectFactory,
        plugins, environments, databaseIdProvider, mappers
    -->

    <!--
        properties: 用于加载外部属性文件
        引入数据库配置，使用 ${key} 访问 value
    -->
    <properties resource="db.properties"/>

    <!-- 类型别名设置 -->
    <typeAliases>
        <!-- 设为ThisUser，不区分大小写 -->
        <!-- <typeAlias type="com.prprv.mybatis.pojo.User" alias="ThisUser"/> -->
        <!-- 默认别名 User -->
        <!-- <typeAlias type="com.prprv.mybatis.pojo.User"/> -->
        <!-- 通过包设置别名，包下所有类型将拥有默认别名，即类名 -->
        <package name="com.prprv.mybatis.pojo"/>
    </typeAliases>

    <environments default="development">
        <environment id="development">
            <!---
                配置事务管理器
                JDBC: 使用 JDBC 的提交和回滚设置来管理事务的范围
                MANAGED: 交给容器 (如Spring) 来管理事务的生命周期和范围
            -->
            <transactionManager type="JDBC"/>

            <!---
                配置数据源类型
                POOLED: 使用传统的 JDBC 数据库连接池
                UNPOOLED: 不使用连接池，每次需要数据库连接时都会打开和关闭连接
                JNDI: 使用上下文中的数据源
            -->
            <dataSource type="POOLED">
                <property name="driver" value="${db.driver}"/>
                <property name="url" value="${db.url}"/>
                <property name="username" value="${db.username}"/>
                <property name="password" value="${db.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--- 引入 MyBatis 的映射文件 -->
    <mappers>
        <!--  <mapper resource="mapper/UserMapper.xml"/> -->
        <!--- 通过包引入映射接口，mapper 接口和映射文件所在包名字必须一样，mapper 接口和映射文件必须一致 -->
        <package name="com.prprv.mybatis.mapper"/>
    </mappers>
</configuration>